[{"/home/ttaylor8522/Projects/web-module-project-reducer/src/index.js":"1","/home/ttaylor8522/Projects/web-module-project-reducer/src/App.js":"2","/home/ttaylor8522/Projects/web-module-project-reducer/src/reportWebVitals.js":"3","/home/ttaylor8522/Projects/web-module-project-reducer/src/components/TotalDisplay.js":"4","/home/ttaylor8522/Projects/web-module-project-reducer/src/components/CalcButton.js":"5","/home/ttaylor8522/Projects/web-module-project-reducer/src/actions/index.js":"6","/home/ttaylor8522/Projects/web-module-project-reducer/src/reducers/index.js":"7"},{"size":500,"mtime":1629148124297,"results":"8","hashOfConfig":"9"},{"size":3179,"mtime":1629333453326,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1629148124298,"results":"11","hashOfConfig":"9"},{"size":424,"mtime":1629148124297,"results":"12","hashOfConfig":"9"},{"size":286,"mtime":1629148124297,"results":"13","hashOfConfig":"9"},{"size":852,"mtime":1629331638067,"results":"14","hashOfConfig":"9"},{"size":1404,"mtime":1629333767269,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"qtrofe",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/ttaylor8522/Projects/web-module-project-reducer/src/index.js",[],["33","34"],"/home/ttaylor8522/Projects/web-module-project-reducer/src/App.js",["35","36"],"import React, { useReducer } from 'react';\nimport reducer, { initialState } from './reducers/index'\nimport { applyNumber, changeOperation, clearDisplay, memoryTotal, memoryRecall, memoryClear } from './actions/index.js'\nimport './App.css';\n\nimport TotalDisplay from './components/TotalDisplay';\nimport CalcButton from './components/CalcButton';\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  console.log(state)\n\n  const eventHandler = (e) => {\n    dispatch(applyNumber(e))\n  }\n\n  const displayHandler = (e) => {\n    dispatch(clearDisplay(e))\n  }\n\n  const memoryTotalHandler = () => {\n    dispatch(memoryTotal())\n  }\n\n  const memoryRecallHandler = () => {\n    dispatch(memoryRecall())\n  }\n\n  const memoryClearHandler = () => {\n    dispatch(memoryClear())\n  }\n\n  const addOperator = () => {\n    dispatch(changeOperation('+'))\n  }\n\n  const multiplyOperator = () => {\n    dispatch(changeOperation('*'))\n  }\n\n  const subtractOperator = () => {\n    dispatch(changeOperation('-'))\n  }\n\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-dark bg-dark\">\n        <a className=\"navbar-brand\" href=\"#\"><img width=\"40px\" src=\"./Lambda-Logo-Red.png\"/> Lambda Reducer Challenge</a>\n      </nav>\n\n      <div className = \"container row mt-5\">\n        <div className=\"col-md-12 d-flex justify-content-center\">\n          <form name=\"Cal\">\n            \n            <TotalDisplay value={state.total}/>\n            <div className=\"row details\">\n              <span id=\"operation\"><b>Operation:</b>{state.operation}</span>\n              <span id=\"memory\"><b>Memory:</b>{state.memory}</span>\n            </div>\n            \n            <div className=\"row\">\n              <CalcButton onClick={memoryTotalHandler} value={\"M+\"}/>\n              <CalcButton onClick={memoryRecallHandler} value={\"MR\"}/>\n              <CalcButton onClick={memoryClearHandler} value={\"MC\"}/>\n            </div>\n\n            <div className=\"row\">\n              <CalcButton onClick={() => eventHandler(1)} value={1}/>\n              <CalcButton onClick={() => eventHandler(2)} value={2}/>\n              <CalcButton onClick={() => eventHandler(3)} value={3}/>\n            </div>\n\n            <div className=\"row\">\n              <CalcButton onClick={() => eventHandler(4)} value={4}/>\n              <CalcButton onClick={() => eventHandler(5)} value={5}/>\n              <CalcButton onClick={() => eventHandler(6)} value={6}/>\n            </div>\n\n            <div className=\"row\">\n              <CalcButton onClick={() => eventHandler(7)} value={7}/>\n              <CalcButton onClick={() => eventHandler(8)} value={8}/>\n              <CalcButton onClick={() => eventHandler(9)} value={9}/>\n            </div>\n\n            <div className=\"row\">\n              <CalcButton onClick={addOperator} value={\"+\"}/>\n              <CalcButton onClick={multiplyOperator} value={\"*\"}/>\n              <CalcButton onClick={subtractOperator} value={\"-\"}/>\n            </div>\n\n            <div className=\"row ce_button\">\n              <CalcButton onClick={displayHandler} value={\"CE\"}/>\n            </div>\n\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/ttaylor8522/Projects/web-module-project-reducer/src/reportWebVitals.js",[],"/home/ttaylor8522/Projects/web-module-project-reducer/src/components/TotalDisplay.js",[],"/home/ttaylor8522/Projects/web-module-project-reducer/src/components/CalcButton.js",[],["37","38"],"/home/ttaylor8522/Projects/web-module-project-reducer/src/actions/index.js",[],"/home/ttaylor8522/Projects/web-module-project-reducer/src/reducers/index.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":48,"column":9,"nodeType":"45","endLine":48,"endColumn":46},{"ruleId":"46","severity":1,"message":"47","line":48,"column":46,"nodeType":"45","endLine":48,"endColumn":93},{"ruleId":"39","replacedBy":"48"},{"ruleId":"41","replacedBy":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["50"],["51"],"no-global-assign","no-unsafe-negation"]